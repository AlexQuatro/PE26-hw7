'use strict';

/* 
Теоретичні питання
1. Як можна створити рядок у JavaScript?

	Присвоїти значення змінній і огорнути це значення в лапки. Лапки будь-яке значення перетворюють на рядок. Навіть, якщо між лапками нічого нема, це означає, що рядок пустий, але він існує.

2. Яка різниця між одинарними (''), подвійними ("") та зворотніми (``) лапками в JavaScript?

	Між одинарними та подвійними лапками різниці нема - справа смаку та зручності, але в рядку виділеному одними лапками можливе використання інших для виділення тексту, тобто якщо рядок виділений одинарними лапками можна виділити сдово подвійними, а от зворотні лапки надають змогу в рядок вставити будь-який діючий JavaScript код завдяки ${}.

3. Як перевірити, чи два рядки рівні між собою?

	Для порівняння рядків можна використати декілька способів:
		використати оператори порівняння для порівнянн довжини рядка length, або посимвольного порівняння;
		використати метод .localeCompare() для більш "правильного" порівняння за допомогою вбудованого функціоналу;

4. Що повертає Date.now()?

	Повертається так званий TimeStamp - ціле число, яке визначає кількість часу від 1 січня 1970 року до моменту виклику в мілісекундах.

5. Чим відрізняється Date.now() від new Date()?

	Date.now() повертає TimeStamp, а new Date() повертає точну дату та час на момент виклику.

*/

/* 
Практичні завдання
1. Перевірити, чи є рядок паліндромом. Створіть функцію isPalindrome, яка приймає рядок str і повертає true, якщо рядок є паліндромом
(читається однаково зліва направо і справа наліво), або false в іншому випадку.
*/

const isPalindrome = (str) => {

	let strReverse = '';

	for (let i = str.length - 1; i >= 0; i--) {
		const element = str[i].toLowerCase();
		strReverse += element;
	}

	const comparison = str.toLowerCase().localeCompare(strReverse);

	if (comparison === 0) {
		return true;
	}

	return false;
}

console.log(isPalindrome('р1оТато1Р'));

/* 
2. Створіть функцію, яка перевіряє довжину рядка. Вона приймає рядок, який потрібно перевірити, максимальну довжину і повертає true, якщо рядок менше або дорівнює вказаній довжині, і false, якщо рядок довший. Ця функція стане в нагоді для валідації форми. Приклади використання функції:
// Рядок коротше 20 символів
funcName('checked string', 20); // true
// Довжина рядка дорівнює 18 символів
funcName('checked string', 10); // false
*/

const isLengthString = (str, len) => {

	if (str.length <= len) {
		return true;
	}
	return false;
}

console.log(isLengthString('checked string', 20));
console.log(isLengthString('checked string', 10));

/* 
3. Створіть функцію, яка визначає скільки повних років користувачу. Отримайте дату народження користувача через prompt. Функція повина повертати значення повних років на дату виклику функцію.
*/

const userDate = prompt('Введіть дату свого народження в форматі: рррр мм дд');

const calcAge = (date) => {

	const todayDate = new Date();
	const birthDate = new Date(date);
	let userAge = todayDate.getFullYear() - birthDate.getFullYear();
	const month = todayDate.getMonth() - birthDate.getMonth();

	if (month < 0 || (month === 0 && todayDate.getDate() < birthDate.getDate())) {
		userAge--;
	}

	return userAge;
}

console.log(calcAge(userDate));
